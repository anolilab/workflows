# Note: this is a shared pipeline used by other repositories.
# Docs: https://docs.github.com/en/actions/using-workflows/reusing-workflows

name: "AlloAllo"

on: # yamllint disable-line rule:truthy
    workflow_call:
        inputs:
            issue-welcome:
                description: "Message to show to a contributor opening their first issue."
                required: false
                default: >
                    It looks like this is your first issue. Welcome! 👋
                    One of the project maintainers will be with you as soon as possible. We
                    appreciate your patience. To safeguard the health of the project, please
                    take a moment to read our [code of conduct](../blob/main/.github/CODE_OF_CONDUCT.md).
                type: "string"
            pr-welcome:
                description: "Message to show to a contributor opening their first pull request."
                required: false
                default: >
                    It looks like this is your first pull request. 🎉
                    Thank you for your contribution! One of the project maintainers will triage
                    and assign the pull request for review. We appreciate your patience. To
                    safeguard the health of the project, please take a moment to read our
                    [code of conduct](../blob/main/.github/CODE_OF_CONDUCT.md).
                type: "string"
            pr-merged:
                description: "Message to show to a contributor after first merged pull request."
                required: false
                type: "string"
            onboarding-lead:
                description: "The GitHub username of the onboarding lead."
                required: false
                type: "string"
            target-repo:
                description: "The repo to run this action on. This is to prevent actions from running on forks unless intended."
                required: true
                type: "string"

permissions:
    contents: "read"
    issues: "write"
    pull-requests: "write"

jobs:
    allo-allo:
        if: "github.repository == inputs.target-repo"
        name: "The welcome bot"
        runs-on: "ubuntu-latest"

        steps:
            - name: "Harden Runner"
              uses: "step-security/harden-runner@c95a14d0e5bab51a9f56296a4eb0e416910cd350" # v2.10.3
              with:
                  egress-policy: "audit"

            - name: "Welcome"
              uses: "actions/first-interaction@34f15e814fe48ac9312ccf29db4e74fa767cbab7" # v1.3.0
              with:
                  repo-token: "${{ secrets.GITHUB_TOKEN }}"
                  issue-message: "${{ inputs.issue-welcome }}"
                  pr-message: "${{ inputs.pr-welcome }}"

    comment_on_merged_pull_request:
        if: "github.event.pull_request.merged == true"
        runs-on: "ubuntu-latest"
        steps:
            - name: "Checkout repository"
              uses: "actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683" # v4.2.2

            - name: "Set Environment Variables"
              env:
                  AUTHOR: "${{ github.event.pull_request.user.login }}"
                  REPO: "${{ github.event.repository.name }}"
                  OWNER: "${{ github.event.repository.owner.login }}"
              run: |
                  {
                    echo "AUTHOR=${AUTHOR}"
                    echo "REPO=${REPO}"
                    echo "OWNER=${OWNER}"
                  } >> "$GITHUB_ENV"

            - name: "Count Merged Pull Requests"
              id: "count_merged_pull_requests"
              uses: "actions/github-script@60a0d83039c74a4aee543508d2ffcb1c3799cdea" # 7.0.1
              with:
                  github-token: "${{ secrets.GITHUB_TOKEN }}"
                  script: |
                      try {
                        const author = process.env.AUTHOR;
                        const repo = process.env.REPO;
                        const owner = process.env.OWNER;
                        const { data } = await github.rest.search.issuesAndPullRequests({
                          q: `repo:${owner}/${repo} type:pr state:closed author:${author}`
                        });
                        const prCount = data.items.filter(pr => pr.pull_request.merged_at).length;

                        core.exportVariable('PR_COUNT', prCount);
                      } catch (error) {
                        core.setFailed(`Error counting merged pull requests: ${error.message}`);
                      }

            - name: "Comment on the Merged Pull Request"
              uses: "actions/github-script@60a0d83039c74a4aee543508d2ffcb1c3799cdea" # 7.0.1
              with:
                  github-token: "${{ secrets.GITHUB_TOKEN }}"
                  script: |
                      try {
                        const prCount = parseInt(process.env.PR_COUNT);
                        const author = process.env.AUTHOR;
                        const mention = process.env.ONBOARDING_LEAD;
                        const prNumber = context.payload.pull_request.number;
                        const repo = process.env.REPO;

                        function getRandomEmoji() {
                          const emojis = ['🎉', '🚀', '💪', '🌟', '🏆', '🎊', '🔥', '👏', '🌈', '🚂'];
                          return emojis[Math.floor(Math.random() * emojis.length)];
                        }

                        function getMessage(count) {
                          const emoji = getRandomEmoji();

                          switch(count) {
                            case 1:
                              return `${emoji} **Fantastic work @${author}!** Your very first PR to ${repo} has been merged! 🎉🥳\n\n` +
                                     `You've just taken your first step into open-source, and we couldn't be happier to have you onboard. 🙌\n` +
                                     `If you're feeling adventurous, why not dive into another issue and keep contributing? The community would love to see more from you! 🚀\n\n` +
                                     `For any support, feel free to reach out to the developer onboarding lead: @${mention}. Happy coding! 👩‍💻👨‍💻`;
                            case 2:
                              return `${emoji} **Well done @${author}!** Two PRs merged already! 🎉🥳\n\n` +
                                     `With your second PR, you're on a roll, and your contributions are already making a difference. 🌟\n` +
                                     `Looking forward to seeing even more contributions from you. The developer onboarding lead: @${mention} is here if you need any help! Keep up the great work! 🚀`;
                            case 3:
                              return `${emoji} **You're on fire, @${author}!** Three PRs merged and counting! 🔥🎉\n\n` +
                                     `Your consistent contributions are truly impressive. You're becoming a valued member of our community! 💖\n` +
                                     `Have you considered taking on some more challenging issues? We'd love to see what you can do! 💪\n\n` +
                                     `Remember, @${mention} is always here to support you. Keep blazing that trail! 🚀`;
                            case 5:
                              return `${emoji} **High five, @${author}!** You've hit the incredible milestone of 5 merged PRs! 🖐️✨\n\n` +
                                     `Your dedication to ${repo} is outstanding. You're not just contributing code; you're shaping the future of this project! 🌠\n` +
                                     `We'd love to hear your thoughts on the project. Any ideas for new features or improvements? 🤔\n\n` +
                                     `@${mention} and the whole team applaud your efforts. You're a superstar! 🌟`;
                            case 10:
                              return `${emoji} **Double digits, @${author}!** 10 merged PRs is a massive achievement! 🏆🎊\n\n` +
                                     `Your impact on ${repo} is undeniable. You've become a pillar of our community! 🏛️\n` +
                                     `We'd be thrilled to have you take on a mentorship role for newer contributors. Interested? 🧑‍🏫\n\n` +
                                     `@${mention} and everyone here are in awe of your contributions. You're an open source hero! 🦸‍♀️🦸‍♂️`;
                            default:
                              if (count > 10) {
                                return `${emoji} **Incredible, @${author}!** You've merged your ${count}th PR! 🎯🎊\n\n` +
                                       `Your ongoing commitment to ${repo} is truly remarkable. You're a driving force in our community! 🚀\n` +
                                       `Your contributions are helping to shape the future of this project. What exciting features or improvements do you envision next? 🔮\n\n` +
                                       `@${mention} and the entire team are grateful for your dedication. You're an inspiration to us all! 💫`;
                              } else {
                                return `${emoji} **Great job, @${author}!** You've merged your ${count}th PR! 🎊\n\n` +
                                       `Your contributions to ${repo} are making a real difference. Keep up the fantastic work! 💪\n` +
                                       `Remember, every PR counts and helps improve the project. What will you tackle next? 🤔\n\n` +
                                       `@${mention} is here if you need any guidance. Onward and upward! 🚀`;
                              }
                          }
                        }

                        let message = `${getRandomEmoji()} Thank you for your contribution, @${author}! 🎉`);

                        if (process.env.PR_MERGED_MESSAGE) {
                            message = process.env.PR_MERGED_MESSAGE;
                        } else if (typeof prCount === 'number') {
                            message = getMessage(prCount);
                        }

                        await github.rest.issues.createComment({
                          owner: process.env.OWNER,
                          repo: process.env.REPO,
                          issue_number: prNumber,
                          body: message
                        });
                      } catch (error) {
                        core.setFailed(`Error creating comment: ${error.message}`);
                      }
              env:
                  ONBOARDING_LEAD: "${{ inputs.onboarding-lead }}"
                  PR_MERGED_MESSAGE: "${{ inputs.pr-merged }}"
